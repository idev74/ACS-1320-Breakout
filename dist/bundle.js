(()=>{"use strict";const t=class{constructor(t=0,s=0,i=100,h=100,e="#f00"){this.x=t,this.y=s,this.width=i,this.height=h,this.color=e}moveBy(t,s){this.x+=t,this.y+=s}moveTo(t,s){this.x=t,this.y=s}render(t){t.beginPath(),t.rect(this.x,this.y,this.width,this.height),t.fillStyle=this.color,t.fill(),t.closePath()}},s=class extends t{constructor(t=0,s=0,i=10,h="white"){super(t,s,2*i,2*i,h),this.dx=2,this.dy=-1,this.color=h,this.radius=i,this.PI2=2*Math.PI}move(){this.moveBy(this.dx,this.dy)}render(t){t.beginPath(),t.arc(this.x,this.y,this.radius,0,PI2),t.fillStyle=this.color,t.fill(),t.closePath()}},i=class{constructor(t,s,i,h,e){this.x=t,this.y=s,this.width=i,this.height=h,this.color=e,this.status=1}render(t){t.beginPath(),t.arc(this.x,this.y,this.width,this.height),t.fillStyle=this.color,t.fill(),t.closePath()}},h=class extends t{constructor(t,s,i,h,e="16px Arial"){super(s,i,0,0,h),this.text=t,this.font=e,this.value=0}render(t){t.font=this.font,t.fillStyle=this.color,t.fillText(`${this.text} ${this.value}`,this.x,this.y)}},e=document.getElementById("myCanvas"),l=(e.getContext("2d"),e.width,e.height,document.addEventListener),a=document.getElementById("myCanvas"),r=a.getContext("2d");new class{constructor(t,e){this.canvas=t,this.ctx=e,this.color="#301934",this.paddleWidth=75,this.paddleX=(this.canvas.width-this.paddleWidth)/2,this.ball=new s(this.ball.x,this.ball.y,this.ball.radius,this.ball.color),this.paddle=new class{constructor(t,s,i,h,e="white"){this.x=t,this.y=s,this.width=i,this.height=h,this.color}moveBy(t,s){this.x+=t,this.y+=s}moveTo(t,s){this.x=t,this.y=s}render(t){t.beginPath(),t.rect(this.x,this.y,this.width,this.height),t.fillStyle=this.color,t.fill(),t.closePath()}}(paddleXStart,paddleYStart,paddleWidth,paddleHeight,objectColor),this.bricks=new class{constructor(t=5,s=4){this.columns=t,this.rows=s,this.bricks=[],this.init()}init(){for(let t=0;t<this.columns;t+=1){this.bricks[t]=[];for(let s=0;s<this.rows;s+=1){const h=t*(brickWidth+brickPadding)+brickOffsetLeft,e=s*(brickHeight+brickPadding)+brickOffsetTop;this.bricks[t][s]=new i(h,e,brickWidth,brickHeight,objectColor)}}}render(t){for(let s=0;s<this.columns;s+=1)for(let i=0;i<this.rows;i+=1){const h=this.bricks[s][i];1===h.status&&h.render(t)}}}(this.bricks.rows,this.bricks.columns),this.scoreLabel=new h("Score: ",8,20,this.color),this.livesLabel=new h("Lives: ",this.canvas.width-65,20),this.rightPressed=!1,this.leftPressed=!1,this.restart(),this.draw(),this.resetItems()}eventListeners(){l("keydown",this.keyDownHandler.bind(this),!1),l("keyup",this.keyUpHandler.bind(this),!1),l("mousemove",this.mouseMoveHandler.bind(this),!1)}restart(){document.location.reload()}paddleMovement(){this.rightPressed&&this.paddle.x<this.canvas.width-this.paddle.width?this.paddle.moveTo(7):this.leftPressed&&this.paddle.x>0&&this.paddle.moveTo(-7)}keyDownHandler({key:t}){"Right"===t||"ArrowRight"===t?this.rightPressed=!0:"Left"!==t&&"ArrowLeft"!==t||(this.leftPressed=!0)}keyUpHandler({key:t}){"Right"===t||"ArrowRight"===t?this.rightPressed=!1:"Left"!==t&&"ArrowLeft"!==t||(this.leftPressed=!1)}mouseMoveHandler({clientX:t}){const s=t-this.canvas.offsetLeft;s>0&&s<this.canvas.width&&this.paddle.moveBy(s-this.paddle.width/2)}resetItems(){this.ball.x=this.canvas.width/2,this.ball.y=this.canvas.height-30,this.ball.dx=2,this.ball.dy=-2,this.paddle.x=(this.canvas.width-this.paddle.width)/2}collisionDetection(){for(let t=0;t<this.bricks.columns;t+=1)for(let s=0;s<this.bricks.rows;s+=1){const i=this.bricks.bricks[t][s];1===i.status&&this.ball.x>i.x&&this.ball.x<this.ball.x+this.bricks.brickWidth&&this.ball.y>i.y&&this.ball.y<i.y+this.bricks.brickHeight&&(this.ball.dy=-this.ball.dy,i.status=0,this.scoreLabel.value+=1,this.scoreLabel.value===this.bricks.rows*this.bricks.columns&&(alert("YOU WIN, CONGRATULATIONS!"),restart()))}}draw(){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.bricks.render(this.ctx),this.ball.render(this.ctx),this.ball.move(),this.paddle.render(this.ctx),this.scoreLabel.render(this.ctx),this.livesLabel.render(this.ctx),this.collisionDetection(),(this.ball.x+this.ball.dx>this.canvas.width-this.ball.radius||this.ball.x+this.ball.dx<this.ball.radius)&&(this.ball.dx=-this.ball.dx),this.ball.y+this.ball.dy<this.ball.radius?this.ball.dy=-this.ball.dy:this.ball.y+this.ball.dy>this.canvas.height-this.ball.radius&&(this.ball.x>this.paddle.x&&this.ball.x<this.paddle.x+this.paddle.width?this.ball.dy=-this.ball.dy:(this.livesLabel.value-=1,this.livesLabel.value?this.resetItems():(alert("GAME OVER"),restart()))),this.paddleMovement(),requestAnimationFrame(this.draw.bind(this))}}(a,r)})();